{"ast":null,"code":"var _jsxFileName = \"G:\\\\New folder\\\\frontend\\\\components\\\\products.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useProductsQuery } from \"../src/generated/graphql\";\nimport { RenderAllProduct } from \"./renderAllProduct\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Products() {\n  _s();\n\n  var _useProductsQuery = useProductsQuery(),\n      loading = _useProductsQuery.loading,\n      error = _useProductsQuery.error,\n      data = _useProductsQuery.data;\n\n  var attrs = [];\n  console.log(\"my data is\");\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n\n  if (!data || data.products.length < 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-xl font-bold w-full h-8\",\n      children: \" there is no item found right now \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (data || data.products) {\n    var arr = [];\n    var products = data.products;\n\n    for (var index = 0; index < products.length; index++) {\n      for (var index2 = 0; index2 < products[index].attrs.length; index2++) {\n        attrs.push({\n          name: products[index].attrs[index2].name,\n          value: products[index].attrs[index2].value\n        });\n      }\n\n      arr.push({\n        price: products[index].price,\n        attrs: attrs\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(RenderAllProduct, {\n          data: arr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this);\n    }\n  }\n}\n\n_s(Products, \"fDddlQT2lezbnWzIILLQr/iE0ks=\", false, function () {\n  return [useProductsQuery];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["G:/New folder/frontend/components/products.tsx"],"names":["React","useProductsQuery","RenderAllProduct","Products","loading","error","data","attrs","console","log","message","products","length","arr","index","index2","push","name","value","price"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,gBAAR,QAA8B,0BAA9B;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;;;AAUA,SAASC,QAAT,GAAoB;AAAA;;AAClB,0BAAiCF,gBAAgB,EAAjD;AAAA,MAAQG,OAAR,qBAAQA,OAAR;AAAA,MAAiBC,KAAjB,qBAAiBA,KAAjB;AAAA,MAAwBC,IAAxB,qBAAwBA,IAAxB;;AACA,MAAIC,KAGC,GAAE,EAHP;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,MAAIL,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACX,MAAG,CAACJ,IAAD,IAASA,IAAI,CAACK,QAAL,CAAcC,MAAd,GAAuB,CAAnC,EAAqC;AACnC,wBAAO;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAGN,IAAI,IAAIA,IAAI,CAACK,QAAhB,EAAyB;AAC3B,QAAIE,GAA6B,GAAC,EAAlC;AACI,QAAMF,QAAQ,GAACL,IAAI,CAACK,QAApB;;AAEA,SAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,QAAQ,CAACC,MAArC,EAA6CE,KAAK,EAAlD,EAAsD;AAClD,WAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGJ,QAAQ,CAACG,KAAD,CAAR,CAAgBP,KAAhB,CAAsBK,MAApD,EAA4DG,MAAM,EAAlE,EAAsE;AACpER,QAAAA,KAAK,CAACS,IAAN,CAAW;AACTC,UAAAA,IAAI,EAACN,QAAQ,CAACG,KAAD,CAAR,CAAgBP,KAAhB,CAAsBQ,MAAtB,EAA8BE,IAD1B;AAETC,UAAAA,KAAK,EAACP,QAAQ,CAACG,KAAD,CAAR,CAAgBP,KAAhB,CAAsBQ,MAAtB,EAA8BG;AAF3B,SAAX;AAID;;AAEDL,MAAAA,GAAG,CAACG,IAAJ,CAAS;AACPG,QAAAA,KAAK,EAACR,QAAQ,CAACG,KAAD,CAAR,CAAgBK,KADf;AAEPZ,QAAAA,KAAK,EAALA;AAFO,OAAT;AAWN,0BAAO;AAAA,+BACL,QAAC,gBAAD;AAAkB,UAAA,IAAI,EAAEM;AAAxB;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,cAAP;AAGQ;AACT;AAAC;;GAvCOV,Q;UAC0BF,gB;;;KAD1BE,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nimport {useProductsQuery} from\"../src/generated/graphql\"\r\nimport { PropsSingleProduct } from \"./renderProudect\";\r\nimport { RenderAllProduct } from \"./renderAllProduct\";\r\n\r\ninterface Attrs{\r\n  \r\n    name:string,\r\n    value:string\r\n  \r\n    \r\n  }\r\n \r\nfunction Products() {\r\n  const { loading, error, data } = useProductsQuery();\r\n  let attrs:[{\r\n    name:string\r\n    value:string\r\n  }]|[] =[]\r\n  console.log(\"my data is\")\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n  if(!data || data.products.length < 1){\r\n    return <div className=\"text-center text-xl font-bold w-full h-8\"> there is no item found right now </div>\r\n  }\r\n  if(data || data.products){\r\nlet arr:Array<PropsSingleProduct>=[]\r\n    const products=data.products;\r\n    \r\n    for (let index = 0; index < products.length; index++) {\r\n        for (let index2 = 0; index2 < products[index].attrs.length; index2++) {\r\n          attrs.push({\r\n            name:products[index].attrs[index2].name,\r\n            value:products[index].attrs[index2].value,\r\n          })\r\n        }\r\n\r\n        arr.push({\r\n          price:products[index].price,\r\n          attrs \r\n        })\r\n\r\n\r\n      \r\n\r\n  \r\n\r\n\r\n  return <div>\r\n    <RenderAllProduct data={arr}/>\r\n\r\n  </div>;}\r\n}}\r\n\r\nexport default Products;\r\n"]},"metadata":{},"sourceType":"module"}